{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset128 Liberation Serif{\*\falt Times New Roman};}{\f4\fswiss\fprq2\fcharset128 Liberation Sans{\*\falt Arial};}{\f5\fnil\fprq0\fcharset128 OpenSymbol{\*\falt Arial Unicode MS};}{\f6\fnil\fprq2\fcharset128 WenQuanYi Zen Hei;}{\f7\fnil\fprq2\fcharset128 Lohit Hindi;}{\f8\fnil\fprq0\fcharset128 Lohit Hindi;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue128;\red128\green128\blue128;}
{\stylesheet{\s0\snext0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129 Normal;}
{\s1\sbasedon44\snext45\ilvl0\outlinelevel0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af7\ab\loch\f4\fs32\lang5129 Heading 1;}
{\s2\sbasedon44\snext45\ilvl1\outlinelevel1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\i\b\kerning1\hich\af6\langfe2052\dbch\af7\ai\ab\loch\f4\fs28\lang5129 Heading 2;}
{\s3\sbasedon44\snext45\ilvl2\outlinelevel2{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af7\ab\loch\f4\fs28\lang5129 Heading 3;}
{\s5\sbasedon44\snext45\ilvl4\outlinelevel4{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af7\ab\loch\f4\fs23\lang5129 Heading 5;}
{\*\cs15\snext15 RTF_Num 2 1;}
{\*\cs16\snext16 RTF_Num 2 2;}
{\*\cs17\snext17 RTF_Num 2 3;}
{\*\cs18\snext18 RTF_Num 2 4;}
{\*\cs19\snext19 RTF_Num 2 5;}
{\*\cs20\snext20 RTF_Num 2 6;}
{\*\cs21\snext21 RTF_Num 2 7;}
{\*\cs22\snext22 RTF_Num 2 8;}
{\*\cs23\snext23 RTF_Num 2 9;}
{\*\cs24\snext24 RTF_Num 3 1;}
{\*\cs25\snext25 RTF_Num 3 2;}
{\*\cs26\snext26 RTF_Num 3 3;}
{\*\cs27\snext27 RTF_Num 3 4;}
{\*\cs28\snext28 RTF_Num 3 5;}
{\*\cs29\snext29 RTF_Num 3 6;}
{\*\cs30\snext30 RTF_Num 3 7;}
{\*\cs31\snext31 RTF_Num 3 8;}
{\*\cs32\snext32 RTF_Num 3 9;}
{\*\cs33\snext33\hich\af5\dbch\af5\loch\f5 RTF_Num 4 1;}
{\*\cs34\snext34\hich\af5\dbch\af5\loch\f5 RTF_Num 4 2;}
{\*\cs35\snext35\hich\af5\dbch\af5\loch\f5 RTF_Num 4 3;}
{\*\cs36\snext36\hich\af5\dbch\af5\loch\f5 RTF_Num 4 4;}
{\*\cs37\snext37\hich\af5\dbch\af5\loch\f5 RTF_Num 4 5;}
{\*\cs38\snext38\hich\af5\dbch\af5\loch\f5 RTF_Num 4 6;}
{\*\cs39\snext39\hich\af5\dbch\af5\loch\f5 RTF_Num 4 7;}
{\*\cs40\snext40\hich\af5\dbch\af5\loch\f5 RTF_Num 4 8;}
{\*\cs41\snext41\hich\af5\dbch\af5\loch\f5 RTF_Num 4 9;}
{\*\cs42\snext42\cf2\ul\ulc0\langfe255\lang255 Internet Link;}
{\*\cs43\snext43\hich\af5\dbch\af5\loch\f5 Bullets;}
{\s44\sbasedon0\snext45{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\kerning1\hich\af6\langfe2052\dbch\af7\loch\f4\fs28\lang5129 Heading;}
{\s45\sbasedon0\snext45{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang5129 Text body;}
{\s46\sbasedon45\snext46{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af8\loch\f3\fs24\lang5129 List;}
{\s47\sbasedon0\snext47{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb120\sa120\cf0\i\kerning1\hich\af3\langfe2052\dbch\af8\ai\loch\f3\fs24\lang5129 Caption;}
{\s48\sbasedon0\snext48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af3\langfe2052\dbch\af8\loch\f3\fs24\lang5129 Index;}
}{\*\listtable{\list\listtemplateid1
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-432\li432}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-576\li576}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-720\li720}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-864\li864}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-1008\li1008}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-1152\li1152}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-1296\li1296}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-1440\li1440}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-1584\li1584}\listid1}
{\list\listtemplateid2
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi0\li0}\listid2}
{\list\listtemplateid3
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f5\dbch\af5\fi-360\li720}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f5\dbch\af5\fi-360\li1080}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f5\dbch\af5\fi-360\li1440}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f5\dbch\af5\fi-360\li1800}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f5\dbch\af5\fi-360\li2160}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f5\dbch\af5\fi-360\li2520}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f5\dbch\af5\fi-360\li2880}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f5\dbch\af5\fi-360\li3240}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f5\dbch\af5\fi-360\li3600}\listid3}
}{\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}{\info{\author Matthew Wigley}{\creatim\yr2012\mo8\dy15\hr22\min9}{\revtim\yr2012\mo8\dy15\hr23\min27}{\printim\yr0\mo0\dy0\hr0\min0}{\comment LibreOffice}{\vern3400}}\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709

{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn11906\pghsxn16838\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default;}}
\formshade{\*\pgdscno0}\paperh16838\paperw11906\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\sectunlocked1\pgndec\pgwsxn11906\pghsxn16838\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pgndec\pard\plain \s1\ilvl0\outlinelevel0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af7\ab\loch\f4\fs32\lang5129{\listtext\pard\plain  \tab}\ilvl0\ls2 \li432\ri0\lin432\rin0\fi0\li432\ri0\lin432\rin0\fi-432\sb240\sa120{\rtlch \ltrch\loch
Building The Project}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
How to build the project and load code onto the boards:\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
first take a look at:\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
https://github.com/team-ramrod/mariokart/wiki/Software-Compilation\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
I'd recommend that instead of following their information just use these instructions on linux: (just the \'81\'67Install arm-none-eabi-gcc\'81\'68 part)\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
http://torrentula.to.funpic.de/tag/arm-none-eabi-gcc/\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
and then add this path to your .bashrc file (or copy and paste it in each time you start a terminal) so that the compiler can be found:\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/opt/CodeSourcery/arm-2011.09/bin"\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
you should be able to run arm-none-eabi-gcc, and get a 'no input files' error.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
navigate to mariokart/Software and (as a superuser) type:\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
make\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
this should make the C part of the project.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
You'll also need a copy of OpenOCD.  This will probably be available in your linux repo, or just find a copy of it online.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
Next connect the board you wish to program with one of the department usb-to-jtag connectors.  Start a new terminal, navigate to mariokart/Software, and type make OCD to start OpenOCD.  In the other terminal load the program onto the board using: (e.g. for comms board)\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
make program-comms\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
Note that you'll have to reset the board by cycling the power to start it up again.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
The other option is to use:\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
make debug-comms\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
which will load the program and then start a paused session of gdb - type (c)ontinue to start the program.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
Note that you can connect a UART cable if you want serial output from the boards - I didn't do this because there weren't any cables made up and I didn't have many connectors left to make new ones - check the wiki from 2011 for more info on doing it.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
Here was my usual terminal entry:\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch
    }{\rtlch \ltrch\loch
source /home/mwwigley/.bashrc\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch
    }{\rtlch \ltrch\loch
cd mariokart\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch
    }{\rtlch \ltrch\loch
cd Software\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch
    }{\rtlch \ltrch\loch
sudo su\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch
    }{\rtlch \ltrch\loch
make ocd\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch
    }{\rtlch \ltrch\loch
start a new terminal,\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch
    }{\rtlch \ltrch\loch
navigate to Software\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch
    }{\rtlch \ltrch\loch
sudo su\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch
    }{\rtlch \ltrch\loch
make program-brake\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch
    }{\rtlch \ltrch\loch
disconnect and reconnect power to run program\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch
    }{\rtlch \ltrch\loch
might need to restart OCD after disconnecting and reconnecting\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
}
\par \pard\plain \s1\ilvl0\outlinelevel0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af7\ab\loch\f4\fs32\lang5129{\listtext\pard\plain  \tab}\ilvl0\ls2 \li432\ri0\lin432\rin0\fi0\li432\ri0\lin432\rin0\fi-432{\rtlch \ltrch\loch
Setting Up The Project:}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
I've included images of the set up project in documentation/images.  Connect the project up like it is done in the pictures.  Most importantly you'll need all the boards connected via CANBUS (unless you cange the all boards define in the comms board main.c.  For some reason the canbus code doesn't like having only 2 boards connected though, so use at least 3 even if one is just a board with dummy code that does nothing)\'0d. \'0d  Two of the boards only have one enabled ethernet port, so make sure you don't use the blacked out/covered ethernet ports.   The order you connect the boards does not matter.}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
Hook up the battery supply to one of the boards using the wall plug (shouldn't matter which, but keep in mind that without a battery supply the 12 Volt regulator won't work, you'll only have access to 5 and 3.3V).}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
Hook up all the peripherals.  For calibration to complete you need to correctly hook up the brake actuator and steering motor.  Hit both the limit switches on the steering motor to complete it's calibration.  The brake should transition to it's 'brake off' position (at the moment it's just arbitary, and will need to be calibrated on the kart), and the steering motor should stop in what it calculates to be half way between the limit switches.  Once that happens the system should transition to it's run state.}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
Plug a USB cable from the comms board into your laptop and you should be able to navigate to Software/highLevelControl and run python Tests.py to make the program run a variety of peripheral  sets and gets.}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
\'0d}
\par \pard\plain \s1\ilvl0\outlinelevel0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af7\ab\loch\f4\fs32\lang5129{\listtext\pard\plain  \tab}\ilvl0\ls2 \li432\ri0\lin432\rin0\fi0\li432\ri0\lin432\rin0\fi-432{\rtlch \ltrch\loch
State of the project:\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
all major parts of the project should be in working order.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
The boards should be able to communicate via canbus, and configure into their running state.  It  should be possible to get and set all values via the python API(in Software/highLevelControl), and the tests should run.}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
}
\par \pard\plain \s1\ilvl0\outlinelevel0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af7\ab\loch\f4\fs32\lang5129{\listtext\pard\plain  \tab}\ilvl0\ls2 \li432\ri0\lin432\rin0\fi0\li432\ri0\lin432\rin0\fi-432{\rtlch \ltrch\loch
\'0dTODO List}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
Here's my todolist of things you might need to do}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\listtext\pard\plain \hich\af5\dbch\af5\loch\f5 \'95\tab}\ilvl0\ls3 \li1080\ri0\lin1080\rin0\fi-360\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
buy a whole lot of the correct connectors, and solder them up and use them instead of flying leads.  The problem is that the connectors on the boards are really terrible - they just break all the time, it's barely worth using them.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\listtext\pard\plain \hich\af5\dbch\af5\loch\f5 \'95\tab}\ilvl0\ls3 \li1080\ri0\lin1080\rin0\fi-360\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
make/get another two ethernet cables (had a couple stolen, so you'll have to make some more)\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\listtext\pard\plain \hich\af5\dbch\af5\loch\f5 \'95\tab}\ilvl0\ls3 \li1080\ri0\lin1080\rin0\fi-360\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
load code onto the student board and ensure that it works correctly with SPI acceleration setting from the motor board\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\listtext\pard\plain \hich\af5\dbch\af5\loch\f5 \'95\tab}\ilvl0\ls3 \li1080\ri0\lin1080\rin0\fi-360\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
get P(ID) control working on the motor board to set the speed instead of just acceleration.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\listtext\pard\plain \hich\af5\dbch\af5\loch\f5 \'95\tab}\ilvl0\ls3 \li1080\ri0\lin1080\rin0\fi-360\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
put the actuators on the kart and try them out, get the kart moving in at least a couple of ways and video it\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\listtext\pard\plain \hich\af5\dbch\af5\loch\f5 \'95\tab}\ilvl0\ls3 \li1080\ri0\lin1080\rin0\fi-360\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Currently removing or crasing a board doesn't cause the system to transition to an error state.  acknowledgements need to be implemented.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\listtext\pard\plain \hich\af5\dbch\af5\loch\f5 \'95\tab}\ilvl0\ls3 \li1080\ri0\lin1080\rin0\fi-360\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
getting data via USB seems to be slow - may need to just periodically send all data to the python code in a big chunk, and run a thread which saves it - otherwise people using repeated Get's from the API might have their programs horribly slowed.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\listtext\pard\plain \hich\af5\dbch\af5\loch\f5 \'95\tab}\ilvl0\ls3 \li1080\ri0\lin1080\rin0\fi-360\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
properly implement and test closed loop speed control\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\listtext\pard\plain \hich\af5\dbch\af5\loch\f5 \'95\tab}\ilvl0\ls3 \li1080\ri0\lin1080\rin0\fi-360\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
heatsink may be needed on the steering motor driver - only rated 2 amps without one. if it gets hot add one.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\listtext\pard\plain \hich\af5\dbch\af5\loch\f5 \'95\tab}\ilvl0\ls3 \li1080\ri0\lin1080\rin0\fi-360\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
there are lots of tiny fluctuations in the position of the brake.  This is might be due to noise on the potentiometer or it might be due to steady state error.  It means that the brake actuator doesn't stop moving.  You could try using integral control to fix it, but I didn't have any luck. If you can make something workable then you might be able to remove most the code in brake_driver.c's do_drive_calculation() function.  Proportional control seems to be enough for the steering motor.}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\listtext\pard\plain \hich\af5\dbch\af5\loch\f5 \'95\tab}\ilvl0\ls3 \li1080\ri0\lin1080\rin0\fi-360\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Cut holes in the black board boxes so that the wires can get out when they're screwed in place}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\listtext\pard\plain \hich\af5\dbch\af5\loch\f5 \'95\tab}\ilvl0\ls3 \li1080\ri0\lin1080\rin0\fi-360\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Reenable working out the max steering angle during calibration instead of assuming 30 degrees}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\listtext\pard\plain \hich\af5\dbch\af5\loch\f5 \'95\tab}\ilvl0\ls3 \li1080\ri0\lin1080\rin0\fi-360\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
an IsMoving() high level python function would be nice for speed.py, brake.py, and steering.py so that the user can e.g. tell that the steering has finished moving to its desired position easily}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\listtext\pard\plain \hich\af5\dbch\af5\loch\f5 \'95\tab}\ilvl0\ls3 \li1080\ri0\lin1080\rin0\fi-360\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
calibrate the speed measurement \u8211\'3f I haven't had the chance to test the speed calculation code on the kart so maybe it won't be accurate in practice.}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\listtext\pard\plain \hich\af5\dbch\af5\loch\f5 \'95\tab}\ilvl0\ls3 \li1080\ri0\lin1080\rin0\fi-360\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Implement a solution to needing 12-30 volts for the inductive speed sensor but the 12V regulator not working on the board \u8211\'3f probably either figure out why it doesn't work and fix it or take V+ for it directly from the 24 volt battery}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\listtext\pard\plain \hich\af5\dbch\af5\loch\f5 \'95\tab}\ilvl0\ls3 \li1080\ri0\lin1080\rin0\fi-360\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
determine the actual brake actuator 'brake on' and 'brake off' positions on the cart, and set them in the python code and C code}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
\'0d}
\par \pard\plain \s1\ilvl0\outlinelevel0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af7\ab\loch\f4\fs32\lang5129{\listtext\pard\plain  \tab}\ilvl0\ls2 \li432\ri0\lin432\rin0\fi0\li432\ri0\lin432\rin0\fi-432{\rtlch \ltrch\loch
Board specific information and problems}
\par \pard\plain \s3\ilvl2\outlinelevel2{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af7\ab\loch\f4\fs28\lang5129{\listtext\pard\plain  \tab}\ilvl2\ls2 \li720\ri0\lin720\rin0\fi0\li720\ri0\lin720\rin0\fi-720{\rtlch \ltrch\loch
Sensor board}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
The 12v regulator is not working(usually it only functions when Pbatt is plugged in as it needs more than the 5V the canbus provides so make sure when you're testing it you have a Pbatt plugged in).  It's needed because the inductive speed sensor needs at least 12 volts (12 to 30 volts) although it appeared to run on 5 volts.  For now I've just powered the speed sensor directly from Pbatt or another boards 12V terminal.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
The connector also needs fixing for the speed sensor (no point fixing it until 12 volts works though).\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
The speed sensor has the following wires:\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
blue - ground\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
black - measure line\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
brown - Vcc\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
internally and over CANBUS and USB the brake position is measured in a 1000*meters/second value.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
Also note that this speed sensor hasn't been tested on a moving kart, so make sure it's actually accurate - in principle it should be.  I haven't even looked at how to connect it to the kart.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
}
\par \pard\plain \s3\ilvl2\outlinelevel2{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af7\ab\loch\f4\fs28\lang5129{\listtext\pard\plain  \tab}\ilvl2\ls2 \li720\ri0\lin720\rin0\fi0\li720\ri0\lin720\rin0\fi-720{\rtlch \ltrch\loch
Steering board}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
For some reason (it's been that way since I got the boards) one of the PWM pins didn't work on this board - I couldn't figure out why, there don't appear to be any shorts or anything.  I've used an alternate PWM pin on the black line.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
At the moment the steering board just sends an integer angle in degrees across CANBUS/USB, limiting steering accuracy to 1 degree.  You might want to increase the accuracy here, but for steering degree level accuracy is probably enough.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
The steering motor calibration is partially bypassed at the moment \u8211\'3f it just assumes that the distance to the limit switches is 30 degrees on either side no matter the calibration so make sure you change that if you're setting it up on the kart.  You'll also need to get that maximum angle and change the constant in the python Steering.py module.}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
The PWM duty is currently limited to either 25% or 50% because otherwise it screws with the power supply (ones which switch at high currents cause spikes in the wall supply knocking out the boards, some just current limit \u8211\'3f shouldn't be a problem on the go karts).}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
\'0d}
\par \pard\plain \s3\ilvl2\outlinelevel2{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af7\ab\loch\f4\fs28\lang5129{\listtext\pard\plain  \tab}\ilvl2\ls2 \li720\ri0\lin720\rin0\fi0\li720\ri0\lin720\rin0\fi-720{\rtlch \ltrch\loch
Brake board}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
A track has been ripped off the potentiomenter sense line(wasn't me!).  There aren't any test points along this line, and it's one of the important ones.  At the moment it's just taped onto a through hole but that's going to come loose all the time.  It's probably a good idea to find another ADC pin and use that instead in the long term.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
The colour coding of the potentiometer wires is:\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
red - Vcc\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
orange - pot measure\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
brown (and black on the board) - ground.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
This board is another thing which doesn't have a proper connector.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
Internally and over CANBUS and USB the brake position is measured in a 0-1023 ADC value\'0d.}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
The PWM duty is currently limited to either 25% or 50% because otherwise it screws with the power supply (ones which switch at high currents cause spikes in the wall supply knocking out the boards, some just current limit \u8211\'3f shouldn't be a problem on the go karts).}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
\'0d}
\par \pard\plain \s3\ilvl2\outlinelevel2{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af7\ab\loch\f4\fs28\lang5129{\listtext\pard\plain  \tab}\ilvl2\ls2 \li720\ri0\lin720\rin0\fi0\li720\ri0\lin720\rin0\fi-720{\rtlch \ltrch\loch
Motor board}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
The motor board should talk to the student board(control board) on go-kart but it hasn't been tested properly as I blew up a student board.  A connector cable will have to be made eventually.  For now there is a RJ12 connector I've supplied that you can just connect to the test pins. The colours of the supplied RJ12 connector are:\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
white - SCK\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
black - ground\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
red - MISO\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
green - vcc\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
yellow - reset\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
blue - MOSI\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
As the motor board is acting as master you'll need connect MOSI(master output slave input), ground, and SCK(clock) to the correct test pins.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
Note that you need to keep the cable length as short as possible or the signal gets too wrecked.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
You'll need to flash the student board with new code (see /mariokart/student_board) with the new SPI code.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
for the SPI transfers to work you'll need to pull the SS pin on the student board low, so don't forget to do this or you won't get data transfer.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
The student board reads single bytes over SPI, and sets its pwm duty percent to 1-(value)/256 [the pwm is inverting], since it's minimum duty cycle is 10% you shouldn't send values larger than about 230. the 0-256 value is also used over CANBUS and USB.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
\'0d}
\par \pard\plain \s3\ilvl2\outlinelevel2{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af7\ab\loch\f4\fs28\lang5129{\listtext\pard\plain  \tab}\ilvl2\ls2 \li720\ri0\lin720\rin0\fi0\li720\ri0\lin720\rin0\fi-720{\rtlch \ltrch\loch
Loading code onto the student board}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
to do this the easiest way is to use the provided parallel port connector and do it on a windows xp machine in the DSL - you should just be able to run the batch file avr-gcc-20071221 and then type make to make the code, and use ld to load file (e.g ld main for the standard build). You'll need to provide at least 12 volts on the 24v pin while flashing the board.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
Note that the rj45 wires are pretty horrible so make sure that the parallel port connection wires are ok.\'0d}
\par \pard\plain \s3\ilvl2\outlinelevel2{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af7\ab\loch\f4\fs28\lang5129{\listtext\pard\plain  \tab}\ilvl2\ls2 \li720\ri0\lin720\rin0\fi0\li720\ri0\lin720\rin0\fi-720{\rtlch \ltrch\loch
Student Board}
\par \pard\plain \s45{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
(the student board is the motor current control board for the go karts)}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
Also note that since I fried one of the student boards (put 24 volts onto pwm by accident) I couldn't finish testing the code on the student board.  I got to the point where I was sending arbitary values between 0 and 256 via SPI, so I think the code I've provided should work but if it doesn't SPI transfers should work from the get go (connect blue line on the rj45 to MOSI on the motor board, the white line to SCK (clock), and the black line to ground on the motor board.  Note that the most important problem I had is that SS (slave select) needs to be pulled low on the atmega8 for data to transfer.  This is a problem because the pin isn't connected to a track so you'll need to solder on a flying lead and connect it directly to ground.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
Also be careful in that the altium schematic provided does not seem to match the actual student boards (nor does the pcb layout match perfectly, but it is much closer). SS is pin 14, and is to the right of the PWM pin.\'0d}
\par \pard\plain \s5\ilvl4\outlinelevel4{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af7\ab\loch\f4\fs23\lang5129{\listtext\pard\plain  \tab}\ilvl4\ls2 \li1008\ri0\lin1008\rin0\fi0\li1008\ri0\lin1008\rin0\fi-1008{\rtlch \ltrch\loch
Code}
\par \pard\plain \s45{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
Because I blew up the atmega8 on the student board I couldn't finish working on the code on it in time, so I don't know if it works.  I tested sending an arbitary 0-256 SPI value to the student board and setting the PWM to be proportional to this, but didn't test it in combination with the rest of the code.  Have a go at using \'81\'67student_board/Current Modified Code \u8211\'3f 2012\'81\'68 - if you change my main.c so that it just constantly loops and sets the PWM proportional to setpoint then it should definitely work.}
\par \pard\plain \s45{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
Start off getting SPI to set the PWM frequency on the student board, and then progress to testing it on the scaled down go-kart setup in the power electronics laboratory (ask Edsel about this setup, if you need help)}
\par \pard\plain \s3\ilvl2\outlinelevel2{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af7\ab\loch\f4\fs28\lang5129{\listtext\pard\plain  \tab}\ilvl2\ls2 \li720\ri0\lin720\rin0\fi0\li720\ri0\lin720\rin0\fi-720{\rtlch \ltrch\loch
Motor drivers}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
The motor drivers were purchased from mindkits, I've supplied their datasheets.  PWM output from the brake and steering board is 3.3 volts, and currently at 5.8kHz. If you want to increase the pwm speed past 10khz(to a max of 20kHz) for some reason you'll need to enable the fast slew rate jumper on the motor drivers.  You might need to add heatsinks to the motor drivers.  THey auto cutoff(in a gradual fashion) so you shouldn't be able to break them though.  Last year(2011)the team designed and built their own motor driver boards, these were either broken or I managed to wreck them somehow.  If you decide you want to use one of theirs there is still one spare motor driver chip for them so you could replace it and use theirs.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
I've used the following wire colours to connect the motor drivers:\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
red - 3.3 volts for enable pin\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
orange - in2\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
black \u8211\'3f in1\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
The motor drivers were purchased from:}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{{\field{\*\fldinst HYPERLINK "http://www.mindkits.co.nz/store/movement/motor-driver-2-5a-mc33926" }\cf2\ul\ulc0\langfe255{\fldrslt \cf2\ul\ulc0\langfe255\lang255\rtlch \ltrch\loch\lang255
http://www.mindkits.co.nz/store/movement/motor-driver-2-5a-mc33926}}}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
A good description of the motor drivers is at:}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{{\field{\*\fldinst HYPERLINK "http://www.pololu.com/catalog/product/1212" }\cf2\ul\ulc0\langfe255{\fldrslt \cf2\ul\ulc0\langfe255\lang255\rtlch \ltrch\loch\lang255
http://www.pololu.com/catalog/product/1212}}}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
}
\par \pard\plain \s1\ilvl0\outlinelevel0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af7\ab\loch\f4\fs32\lang5129{\listtext\pard\plain  \tab}\ilvl0\ls2 \li432\ri0\lin432\rin0\fi0\li432\ri0\lin432\rin0\fi-432{\rtlch \ltrch\loch
Debugging states}
\par \pard\plain \s3\ilvl2\outlinelevel2{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af7\ab\loch\f4\fs28\lang5129{\listtext\pard\plain  \tab}\ilvl2\ls2 \li720\ri0\lin720\rin0\fi0\li720\ri0\lin720\rin0\fi-720{\rtlch \ltrch\loch
startup state}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
make sure all 5 boards are plugged in.  If you modify main.c in comms, you can reduce the number of boards needed for startup to complete, but for some reason the canbus code does not like having only two boards connected so don't reduce it to 2 (doesn't even matter if the third board just has no code on it so you can reduce the required boards to 2 and plug in another with no protocol code on it as a workaround).\'0d}
\par \pard\plain \s3\ilvl2\outlinelevel2{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af7\ab\loch\f4\fs28\lang5129{\listtext\pard\plain  \tab}\ilvl2\ls2 \li720\ri0\lin720\rin0\fi0\li720\ri0\lin720\rin0\fi-720{\rtlch \ltrch\loch
calibration state}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
The usual blocking board is the steering board or the brake board as they are the only ones with calibration phases - you'll need to tap both the limit switches on the steering board(and make sure the encoder + motor board is working), and make sure the brake actuator and pot is connected correctly so that it can move to the 'brake on' position and finish its calibration.\'0d}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af7\afs24\lang1081\loch\f3\fs24\lang5129{\rtlch \ltrch\loch
If you have problems you can't figure out with getting started send me an email on }{{\field{\*\fldinst HYPERLINK "mailto:mwwigley@gmail.com" }\cf2\ul\ulc0\langfe255{\fldrslt \cf2\ul\ulc0\langfe255\lang255\rtlch \ltrch\loch\lang255
mwwigley@gmail.com}{\rtlch \ltrch\loch
}} cc }{{\field{\*\fldinst HYPERLINK "mailto:mww35@uclive.ac.nz" }\cf2\ul\ulc0\langfe255{\fldrslt \cf2\ul\ulc0\langfe255\lang255\rtlch \ltrch\loch\lang255
mww35@uclive.ac.nz}{\rtlch \ltrch\loch
}} and hopefully I'll be able to help out.}
\par }